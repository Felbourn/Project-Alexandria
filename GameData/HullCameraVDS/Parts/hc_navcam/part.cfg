PART
{
// --- general parameters ---
name = hc_navcam
module = Part
author = Rubber Ducky

// --- asset parameters ---
mesh = model.mu
scale = 1

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_attach = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0

PhysicsSignificance = 1

// --- editor parameters ---
TechRequired = basicScience
entryCost = 10
cost = 30
category = Utility
subcategory = 0
title = NavCam
manufacturer = Maniacal Mallard Industries
description = The picture quality isn't great, but this tiny lightweight camera is perfect for piloting rovers and probes.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,1,0,0,1

// --- standard part parameters ---
mass = 0.001
dragModelType = default
maximum_drag = 0.0
minimum_drag = 0.0
angularDrag = 0.0
crashTolerance = 5
impactTolerance = 5
maxTemp = 1200

MODULE
{
    name = MuMechModuleHullCameraZoom
    cameraName = NavCam
    cameraForward = 0, 1, 0
    cameraUp = 0, 0, -1
    cameraPosition = 0.0, 0.045, 0.0
    cameraFoVMax = 100
    cameraFoVMin = 60
    cameraMode = 4
}

MODULE
{
	name = HullCamera	
    cameraName = NavCam
    cameraForward = 0, 1, 0
    cameraUp = 0, 0, -1
    cameraPosition = 0.0, 0.045, 0.0
    cameraFoVMax = 100
    cameraFoVMin = 60
	
	//This camera uses film resource to get science
	usesfilm = false
	
	specialExperimentName = photo-

	specialExperimentTitle = #Anon# Picture
	
	//you still have to set this to something or it throws an error when the part loads
	experimentID = hullcampicture
	
	experimentActionName = Snap Picture
	resetActionName = Delete Picture
	collectActionName = Take Photo
	
	useStaging = False
	useActionGroups = True
	hideUIwhenUnavailable = True
	xmitDataScalar = 0.8
	
	dataIsCollectable = True
	interactionRange = 1.2
	
	rerunnable = True	
}
RESOURCE
{
	name = Resolution
	amount = 1
	maxAmount = 15
}

}
