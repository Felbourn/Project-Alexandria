PART
{
	name = His_FASAGeminiUtilityPack
	module = Part
	author = Frizzank

	MODEL
	{
		  model = FASA/Gemini2/FASA_Gemini_Engine_Fuel2/Gemini_UtilityPack
	}

	rescaleFactor = 1.2
	scale = 1.0

	node_stack_top = 0.0, 0.622, 0.0,        0.0, 1.0, 0.0,   3
	node_stack_bottom = 0.0, -0.6925, 0.0,   0.0, -1.0, 0.0,  3
	node_stack_bottom1 = 0.0, -0.36, 0.0,    0.0, -1.0, 0.0,  3

	TechRequired = fuelSystems
	entryCost = 1200
	cost = 850
	category = Propulsion
	subcategory = 0
	title = Gemini Utility Pack and Decoupler
	manufacturer = FASA
	description = A science utility pack with top decoupler for the realistic Gemini pod, for that added touch of realism. Attach the Gemini RCS thrusters to this section for extra control. Has mobile material bay, Geiger counter, gravity scan and, Mystery Goo experiments.

	attachRules = 1,0,1,1,0

	mass = 0.85
	dragModelType = default
	maximum_drag = 0.22
	minimum_drag = 0.22
	angularDrag = 2.3
	crashTolerance = 24
	breakingForce = 80
	breakingTorque = 80
	maxTemp = 2400

	stageOffset = 1
	childStageOffset = 0

    fuelCrossFeed = True

	MODULE
	{
		name = ModuleDecouple
		explosiveNodeID = top
		isOmniDecoupler = false
		ejectionForce = 10
	}

	MODULE
	{
		name = ModuleRCSFX
		thrusterTransformName = RCSthruster
		thrusterPower = 0.4448222
		resourceFlowMode = STACK_PRIORITY_SEARCH
		PROPELLANT
		{
			name = MMH
			ratio = 0.554
		}
		PROPELLANT
		{
			name = NTO
			ratio = 0.446
		}
	
		atmosphereCurve
		{
			key = 0 273
			key = 1 100
		}
	}

	RESOURCE
	{
		name = LqdHydrogen
		amount = 66.65 
		maxAmount = 66.65 
	}
	RESOURCE
	{
		name = LqdOxygen
		amount = 33.11 
		maxAmount = 33.11 
	}
	RESOURCE
	{
		name = Water
		amount = 0
		maxAmount = 100
	}	
	RESOURCE
	{
		name = MMH
		amount = 157.3
		maxAmount = 157.3
	}
	RESOURCE
	{
		name = NTO
		amount = 126.7
		maxAmount = 126.7
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 4000
		maxAmount = 4000
	}

//EQUIPMENT MODULE 
//Length: 1.4 m 
//Maximum diameter: 3.05 m 
//Total mass: 1,278 kg 
//(structure 250 kg; reaction control system 60 kg; telemetry equipment 40 kg; electrical equipment 294 kg; misc contingency 75 kg; environmental control system 117 kg; maneuvering system 120 kg) 
//Propellant mass: 322 kg 
//Reaction control system 
//    thrusters: 8 x 111 N 
//    propellant: NTO/MMH 
//    specific impulse: 288 s 
//    total impulse: 1,078 kNs 
//Maneuver system 
//    thrust: 710 N 
//    propellant: NTO/MMH 
//    specific impulse: 273 s 
//    delta v: 222 m/s 
//Power: fuel cells; 151.0 kWh total, 2.16 kW average

	MODULE
	{
		name = ModuleGenerator
		isAlwaysActive = false
		requiresAllinputs = true
		resourceThreshold = 0.01
		activateGUIName = Fuel Cell On
		shutdownGUIName = Fuel Cell Off
		efficiency = 100 // 40% power, but 100% on water, so power is already done by hand

		INPUT_RESOURCE
		{
		   name = LqdHydrogen
		   rate = 0.0000476370
 		}
		INPUT_RESOURCE
		{
		   name = LqdOxygen
		   rate = 0.0000236640
		}

		OUTPUT_RESOURCE
		{
		   name = ElectricCharge
		   rate = 0.268131471
		}
		OUTPUT_RESOURCE
		{
		   name = Water
		   rate =  0.00003037571
		}
	}

	//Reflection shader plugin
	MODULE
	{
		name = ReflectiveShaderModule

		// Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
		CubeMapSize = 8

		// How deep the reflection will be ("how far the reflection camera will view")
		FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

		// Set to false to render all 6 faces of the CubeMap at once (six times slower~)
		OneFacePerFrame = true

		// The shader to find. The reflective shaders are:
		// Reflective/Diffuse
		// Reflective/VertexLit
		// Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
		ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

		// The height of the parallax map. Values are accepted between 0.005 and 0.08.
		ParallaxHeight = 0.01

		// How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
		ReflectionStrength = 0.4
		//ReflectionColor = 0, 0, 0, 0

		// Use this variable to specify which meshes to apply the shader to.
		// Not using this variable will default to the first found mesh.
		// Use the actual mesh name for the value. Or you could use:
		// all - to replace the shader on all meshes in the model.
		MeshesToChange = all

		// How shiny the specularity will be (if specular).
		// This value will be automatically set if it already exists on the previous shader and is not defined here.
		Shininess = 1.0
		updateRate = 45

		// These variables should be used together only.
		// These values will be automatically set if they already exist on the previous shader and are not defined here
		SpecColorR = 0.8
		SpecColorG = 0.8
		SpecColorB = 0.8
		SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
	}

	MODULE
	{
		name = TweakScale
		type = free
	}
}