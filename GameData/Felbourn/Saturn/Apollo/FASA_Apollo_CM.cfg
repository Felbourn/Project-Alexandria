PART
{
	name = His_FASAApollo_CM
	module = Part
	author = DennyTX,Frizzank

	MODEL
	{
		model=FASA/Apollo/ApolloCSM/FASAApollo_CM
	}
	scale = 1
	rescaleFactor = 1.0

	node_stack_top = 0.0, 1.06, 0.0,       0.0, 1.0, 0.0,    2
	node_stack_bottom = 0.0, -0.645, 0.0,  0.0, -1.0, 0.0,   3

	TechRequired = commandModules
	entryCost = 5000
	cost = 7500
	category = Pods
	subcategory = 0
	title = Apollo Command Module
	manufacturer = FASA
	description = Apollo Command module. maximum of 3 crew.

	attachRules = 1,0,1,1,0

	mass = 3.555
	CoMOffset = 0.0, -0.7, 0.0
	CoLOffset = 0.0, -0.1, 0.0
//	bodyLiftMultiplier = 0.1

	dragModelType = default
	maximum_drag = 0.20
	minimum_drag = 0.15
	angularDrag = 2

	crashTolerance = 12

	skinMaxTemp = 3200
	maxTemp = 1000

	bulkheadProfiles = size2

	vesselType = Ship

	CrewCapacity = 3

	MODULE
	{
	    name = FlagDecal
	    textureQuadName = Flag
	}

	MODULE
	{
		name = ModuleLight
	    lightName = spotlight
		useAnimationDim = true
		lightBrightenSpeed = 3.5
		lightDimSpeed = 3.5
		resourceAmount = 0.001
		animationName = Apollo_CM_Emis
		useResources = true
	}

	INTERNAL
	{
		name = GenericSpace3
	}

	MODULE
	{
		name = ModuleCommand
		minimumCrew = 0
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.4
		}
	}
	RESOURCE
	{
		name = ElectricCharge
		amount = 72000
		maxAmount = 72000
	}

	// 2x tanks like in the CSM
	RESOURCE
	{
		name = MMH (RCS)
		amount = 29.46
		maxAmount = 29.46
	}
	RESOURCE
	{
		name = NTO (RCS)
		amount = 35.38
		maxAmount = 35.38
	}

    MODULE
    {
        name = TweakScale
        type = free
    }

    // R-4D motor
	MODULE
	{
		name = ModuleRCSFX
		thrusterTransformName = RCSthruster
		thrusterPower = 0.4136846
		resourceFlowMode = STACK_PRIORITY_SEARCH
		PROPELLANT
		{
			name = MMH (RCS)
			ratio = 29.4
			DrawGauge = True
		}
		PROPELLANT
		{
			name = NTO (RCS)
			ratio = 35.4
		}
		atmosphereCurve
	 	{
			key = 0 280
			key = 1 140
			key = 4 0.001
	 	}
	}

    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 32

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 50000000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.12
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = Capsule

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 0.5
		updateRate = 115

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
//		rimFalloff = 1.0
//		rimColor = 0.642, 0.6445, 0.6414, 1.0
//		ReflectionColor = 0.6442, 0.6445, 0.64, 0.4
    }	
}
