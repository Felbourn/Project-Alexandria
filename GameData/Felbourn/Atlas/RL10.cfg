
PART
{
	name = His_RL10

	module = Part
	category = Propulsion
	subcategory = 0

	MODEL
	{
	  	model = FASA/Apollo/FASA_Apollo_Eng/LFE_RL10
	  	scale = 1.36, 1.36, 1.36
	}
	rescaleFactor = 1.0
	scale = 1.0

	node_stack_top = 0.0, 0.10, 0.0,      0.0, 1.0, 0.0,   1
	node_stack_bottom = 0.0, -1.0, 0.0,   0.0, -1.0, 0.0,  1
	attachRules = 1,0,1,1,1

	TechRequired = propulsionSystems
	entryCost = 2500
	cost = 2500

	title = Centaur RL-10
	author = Felbourn
	manufacturer = Felbourn
	description = Upper stage engine for various rockets. This engine goes with the Centaur engine plate. It has a high vacuum ISP that makes it a good choice for long interplanetary missions. 

	mass = 0.001 // from config

	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2

	crashTolerance = 12
	breakingForce = 25
	breakingTorque = 25
	maxTemp = 1600

	stagingIcon = LIQUID_ENGINE

	stageOffset = 1
	childStageOffset = 1

	bulkheadProfiles = size1

	MODULE
	{
		name = ModuleEnginesFX
		thrustVectorTransformName = thrustTransform
		exhaustDamage = True
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 90
		heatProduction = 80
		fxOffset = 0, 0, 0
		PROPELLANT
		{
			name = LiquidFuel
	       	ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
		}
		atmosphereCurve
	 	{
			key = 0 1
			key = 1 1
	 	}	
		powerEffectName = Hydrolox-Upper
	}
    PLUME
    {
        name = Hydrolox-Upper
        transformName = thrustTransform
        flarePosition = 0, 0, 0.7
        flareScale = 1.1
        plumePosition = 0, 0, 0.9
        plumeScale = 0.8
        energy = 1
        speed = 1
    }

	MODULE
	{
		name = ModuleEngineConfigs
		origMass = 0.131
		type = ModuleEngines
		configuration = RL-10A-3
		modded = false
		CONFIG
		{
			name = RL-10A-3
			minThrust = 65.6
			maxThrust = 65.6
			heatProduction = 100
			PROPELLANT
			{
				name = LqdHydrogen
				ratio = 0.763
				DrawGauge = True
			}
			PROPELLANT
			{
				name = LqdOxygen
				ratio = 0.237
			}
			atmosphereCurve
			{
				key = 0 444
				key = 1 255
			}
			massMult = 1.000
		}
	}
	MODULE
	{
		name = ModuleGimbal
		gimbalTransformName = Engine_Nozzle
		gimbalRange = 2
	}

	MODULE
	{
       name = ModuleJettison
       jettisonName = fairing
       bottomNodeName = bottom
       isFairing = True
       jettisonedObjectMass = 0.1
       jettisonForce = 1
       jettisonDirection = 0 0 1
	}

	MODULE
	{
		name = ModuleAnimateHeat
		ThermalAnim = LR91_Anim
	}

	MODULE
	{
		name = ModuleAlternator	
		RESOURCE
		{
			name = ElectricCharge
			rate = 1
		}
	}

 	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.6
		maxDistance = 40
		falloff = 2
		thrustTransformName = thrustTransform
	}

	MODULE
	{
		name = TweakScale
		type = free
	}

    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 8

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.25
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = EngineBits

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 200

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}
