PART
{
    name = VHis_rn_vostok_para

    title = Vostok Main Parachute

    module = Part
    author = Raidernick

    MODEL
	{
	   model = RN_Soyuz/Parts/7k/vostok_para
	}
    scale = 1
    rescaleFactor = 1

    //CoMOffset = 0, -0.9, 0.57

    // --- node definitions ---
    // definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z, size
    node_stack_para = -0.81345, 0.2886, 0.0, 0.0, -1.0, 0.0, 1


    // --- FX definitions ---
    sound_parachute_open = activate
    sound_parachute_single = deploy

    // --- editor parameters ---
    TechRequired = generalRocketry
    entryCost = 500
    cost = 850
    category = Utility
    subcategory = 0
    manufacturer = RN Industries
    description = Parachute for Vostok spacecraft, attach on top side of descent module

    // attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
    attachRules = 1,0,0,1,0

    // --- standard part parameters ---
    mass = 0.16
    dragModelType = default
    angularDrag = 1
    crashTolerance = 12
    maxTemp = 1000

    breakingForce = 630
    breakingTorque = 630

    stageOffset = 1

    MODULE
    {
      	name = ModuleParachute
    	semiDeployedAnimation = semi
    	fullyDeployedAnimation = full
    	invertCanopy = true
    	autoCutSpeed = 0.5
    	capName = cap
    	canopyName = canopy
    	stowedDrag = 0
    	semiDeployedDrag = 15
    	fullyDeployedDrag = 300
    	minAirPressureToOpen = 0.1
    	deployAltitude = 5000
    	deploymentSpeed = 3
    	semiDeploymentSpeed = 2
    }

    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = .1

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Diffuse
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.50
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = cap

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 130

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
}
