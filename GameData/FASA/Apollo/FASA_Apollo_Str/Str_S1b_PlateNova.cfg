PART
{

// --- general parameters ---
name = FASAApolloStrS1BPlateNova
module = Part
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Apollo/FASA_Apollo_Str/Str_Nova_Plate
    scale = 2, 2, 2
	rotation = 0, 0, 0	
}
rescaleFactor = 1.0
scale = 2.0


// --- node definitions ---
node_stack_top = 0.0, 1.029, 0.0, 0.0, 1.0, 0.0, 3
node_stack_bottom = 0.0, 0.0, 0.0, 0.0, -1.0, 0.0, 2
node_stack_connect1 = -1.5, 0.0, 0.0, 0.0, -1.0, 0.0, 2
node_stack_connect2 = 1.5, 0.0, 0.0, 0.0, -1.0, 0.0, 2
node_stack_connect3 = 0.0, 0.0, -1.5, 0.0, -1.0, 0.0, 2
node_stack_connect4 = 0.0, 0.0, 1.5, 0.0, -1.0, 0.0, 2
node_stack_connect5 = -1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 2
node_stack_connect6 = -1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 2
node_stack_connect7 = 1.0, 0.0, -1.0, 0.0, -1.0, 0.0, 2
node_stack_connect8 = 1.0, 0.0, 1.0, 0.0, -1.0, 0.0, 2
stackSymmetry = 3

// --- editor parameters ---
TechRequired = experimentalScience
entryCost = 38200
cost = 45000
category = Propulsion
subcategory = 0
title =Nova 7.75m Engine Plate
description = 7.75m engine mount - For Extreme Launches!

stageOffset = 0
childStageOffset = 0

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 10
dragModelType = default
maximum_drag = 0.22
minimum_drag = 0.2
angularDrag = 2.75
crashTolerance = 16
breakingForce = 500
breakingTorque = 500
maxTemp = 2600
fuelCrossFeed = true

RESOURCE
{
 name = LiquidFuel
 amount = 6975
 maxAmount = 6975
}

RESOURCE
{
 name = Oxidizer
 amount = 8525
 maxAmount = 8525
}

//Ferram Aerospace research plugin

MODULE  
{  
	name = FARBasicDragModel  
	S = 3				//Surface Area  
	CdCurve				//Drag coefficient at various angles  
	{  
		key = -1 0		//backwards  
		key = 0 0.3		//sideways  
		key = 1.0 0		//forwards  
	}  
	ClCurve  
	{  
		key = -1 0		//Lift coefficient  
		key = -0.5 -0.03  
		key = 0 0  
		key = 0.5 0.03  
		key = 1 0  
	}  
	CmCurve				//Moment coefficient  
	{  
		key = -1 0  
		key = -0.5 -0.01	//keeping angle and moment signs the same results in pitch instability; it will try to flip over  
		key = 0 0		//making them opposite signs results in pitch stability; it will try to angle fully forward  
		key = 0.5 0.01  
		key = 1 0  
	}  
	localUpVector = 0,1,0		//a unit vector defining "up" for this part; 0,1,0 is standard for most stock-compliant parts  
	localForwardVector = 1,0,0	//a unti vector defining "forward" for this part; 1,0,0 is standard for most stock-compliant parts  
	majorMinorAxisRatio = .5		//the ratio of the part's "forward" length to its "side" length, used for drag and lift calculations  
	taperCrossSectionAreaRatio = 0;	//the part's tapered area projected on a plane normal to the "up" vector, divided by surface area; used to handle changes in drag at hypersonic speeds  
	CenterOfDrag = 0,0,0		//a vector defining the part's CoD  
}  

}
