PART
{

name = FASAApollo_SM
module = Part
author = Frizzank

// --- asset parameters ---
rescaleFactor = 1
MODEL
{
	model=FASA/Apollo/ApolloCSM/FASA_Apollo_CSM
	scale = 1.0, 1.0, 1.0
	rotation = 0, 0, 0	
}

// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0.0, 1.0, 0.0, 0.0, 1.0, 0.0
node_stack_bottom1 = 1.125, -1.32, -0.125, 0.0, -1.0, 0.0, 0
node_stack_bottom2 = 0.0, -1.22, 0.0, 0.0, -1.0, 0.0, 2

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,1

// --- editor parameters ---
TechRequired = specializedControl
entryCost = 11000
cost = 12000
category = Propulsion
subcategory = 0
title = Apollo Service Module
manufacturer = FASA
description = Fuel and equipment for the CM (Command Module). 

// --- standard part parameters ---
mass = 3.0
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 12
breakingForce = 120
breakingTorque = 120
maxTemp = 1500
	bulkheadProfiles = size1
stageOffset = 1
childStageOffset = 1

MODULE
{
    name = FlagDecal
    textureQuadName = Flag
}

RESOURCE
{
	name = ElectricCharge
	amount = 400
	maxAmount = 400
}

RESOURCE
{
	name = MonoPropellant
	amount = 250
	maxAmount = 400
}

RESOURCE
{
 name = LiquidFuel
 amount = 315
 maxAmount = 360
}

RESOURCE
{
 name = Oxidizer
 amount = 385
 maxAmount = 440
}


MODULE
{
	name = ModuleAnimateGeneric
	animationName = CSM_Doors
	startEventGUIName = Close
	endEventGUIName = Open
	actionGUIName = Toggle Doors
}
	MODULE
	{
		name = ModuleSeeThroughObject
		transformName = CSM_Hatch
	}
	MODULE
	{
		name = ModuleCargoBay
		DeployModuleIndex = 0
		closedPosition = 1
		lookupRadius = 1.8
		
		nodeOuterForeID = top
		nodeOuterAftID = bottom
	}
	
//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 8

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.12
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = CSM,CSM_Hatch

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 118

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.642, 0.6445, 0.6414, 1.0
		ReflectionColor = 0.6442, 0.6445, 0.64, 1.0
    }

	
}
