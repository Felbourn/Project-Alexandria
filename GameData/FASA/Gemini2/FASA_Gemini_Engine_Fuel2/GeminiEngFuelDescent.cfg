PART
{

// --- general parameters ---
name = FASAGeminiEngFuelDescent
module = Part
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Gemini2/FASA_Gemini_Engine_Fuel2/GeminiEngFuel_Descent
}
rescaleFactor = 1.0
scale = 1.0

// --- node definitions ---
node_stack_top = 0.0, 0.0, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -1.6, 0.0, 0.0, -1.0, 0.0


// --- FX definitions ---
	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 0
		fxMax = 0.4
		maxDistance = 20
		falloff = 2
		thrustTransformName = thrustTransform
	}
	
fx_exhaustFlame_blue = 0.0, 0.5, 0.0, 0.0, 1.0, 0.0, running
fx_exhaustLight_blue = 0.0, 0.5, 0.0, 0.0, 0.0, 1.0, running
fx_smokeTrail_light = 0.0, 2.0, 0.0, 0.0, 1.0, 0.0, running

// --- Sound FX definition ---

sound_vent_medium = engage
sound_rocket_hard = running
sound_vent_soft = disengage
sound_explosion_low = flameout

// --- editor parameters ---
//Catigorys for parts- Pods Propulsion Control Structural Aero Utility Science
TechRequired = specializedControl
entryCost = 1200
cost = 1500
category = Propulsion
subcategory = 0
title = Gemini Engine and fuel pack for the descent stage
manufacturer = FASA
description = The main descent engines For a Munar Gemini lander, One third more liquid rocket fuel and mono-propellent for the Gemini pack. Attach as a descent stage to the Gemini for landings, gear sold separately. Also contains a non-staged decoupler at the top.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 0.6
dragModelType = default
maximum_drag = 0.21
minimum_drag = 0.21
angularDrag = 2.1
crashTolerance = 24
breakingForce = 80
breakingTorque = 80
maxTemp = 2600

stageOffset = 1
childStageOffset = 0

stagingIcon = LIQUID_ENGINE

MODULE
{
    name = ModuleDecouple
    isOmniDecoupler = False
	explosiveNodeID = top
    ejectionForce = 50
	staged = false

}


RESOURCE
{
 name = MonoPropellant
 amount = 100
 maxAmount = 100
}
RESOURCE
{
 name = LiquidFuel
 amount = 270
 maxAmount = 270
}

RESOURCE
{
 name = Oxidizer
 amount = 330
 maxAmount = 330
}




MODULE
{
	name = ModuleEngines
	thrustVectorTransformName = thrustTransform
	exhaustDamage = true
	ignitionThreshold = 0.1
	minThrust = 0
	maxThrust = 75
	heatProduction = 200
	fxOffset = 0, 0, 0.28
	PROPELLANT
	{
		name = LiquidFuel
       	        ratio = 0.9
		DrawGauge = True
	}
	PROPELLANT
	{
		name = Oxidizer
		ratio = 1.1
	}
	atmosphereCurve
 	{
   	 key = 0 300
  	 key = 1 210
 	}
	
}
MODULE
{
      name = ModuleAnimateHeat
      ThermalAnim = LR91_Anim
}

	
//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 8

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.4
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = all

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 60

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }


}