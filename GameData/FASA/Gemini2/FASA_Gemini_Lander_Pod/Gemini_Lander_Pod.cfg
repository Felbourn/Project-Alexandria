PART
{

// --- general parameters ---
name = FASA_Gemini_Lander_Pod
module = CommandPod
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Gemini2/FASA_Gemini_Lander_Pod/Gemini_Lander_Pod
}
scale = 1
rescaleFactor = 1.0


// --- node definitions ---
// definition format is Position X, Position Y, Position Z, Up X, Up Y, Up Z
node_stack_top = 0.0, 0.476798, 0.0, 0.0, 1.0, 0.0, 0
node_stack_bottom = 0.0, -0.328407, 0.0, 0.0, -1.0, 0.0, 0


// --- editor parameters ---
TechRequired = advExploration
entryCost = 3200
cost = 600
category = Pods
subcategory = 0
title = Gemini Lander Pod
manufacturer = FASA
description = The Gemini Lander Pod, makes a great one man pod for all your exploration needs. Comes with an emergancy set of RCS thrusters on the bottom and its own SAS stabilization.

// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,1

// --- standard part parameters ---
mass = 0.45
dragModelType = default
maximum_drag = 0.2
minimum_drag = 0.2
angularDrag = 2
crashTolerance = 16
maxTemp = 2600
fuelCrossFeed = True
CoMOffset = 0.0, 0.0, 0.0

// --- pod/rcs parameters ---
//MODULE
//{
//	name = ModuleRCS
//	thrusterTransformName = RCSthruster
//	thrusterPower = 0.25
//	resourceName = MonoPropellant
//	fxOffset = 0, 0, 0
//		resourceFlowMode = STAGE_PRIORITY_FLOW
//	atmosphereCurve
// 	{
//   	 key = 0 390
//  	 key = 1 175
// 	}
//}
MODULE
{
	name = ModuleSAS
}

MODULE
{
	name = ModuleReactionWheel
	
	PitchTorque = 0.01
	YawTorque = 0.01
	RollTorque = 0.1
	
	RESOURCE
	{
		name = ElectricCharge
		rate = 0.005
	}
}

// --- tweakables (coming soon...) ---

vesselType = Ship

// --- internal setup ---
CrewCapacity = 1

INTERNAL
	{
  name = FASAGeminiLanderInt
	}

MODULE
	{
	name = ModuleCommand
	minimumCrew = 1
	}

RESOURCE
	{
	name = ElectricCharge
	amount = 50
	maxAmount = 50
	}

RESOURCE
	{
 name = MonoPropellant
 amount = 15
 maxAmount = 15
	}

MODULE
	{
	name = ModuleLight
        lightName = Point_light
	useAnimationDim = true
	lightBrightenSpeed = 3.5
	lightDimSpeed = 3.5
	resourceAmount = 0.001
	animationName = Gemini_Lander_Lights
	useResources = true
	}
MODULE
	{
	name = ModuleScienceExperiment	
	
	experimentID = crewReport
	
	experimentActionName = Crew Report
	resetActionName = Discard Crew Report
	reviewActionName = Review Report
	
	useStaging = False	
	useActionGroups = True
	hideUIwhenUnavailable = True	
	rerunnable = True
	
	xmitDataScalar = 1.0
	}
MODULE
	{
	name = ModuleScienceContainer
	
	reviewActionName = Review Stored Data
	storeActionName = Store Experiments
	evaOnlyStorage = True
	storageRange = 1.3
	}

//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 8

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.2
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = Gemini_Lander_Pod_Glass

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 15

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }
	
}


