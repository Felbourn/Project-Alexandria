PART
{

// --- general parameters ---
name = FASA_Atlas_LFT_Cone2
module = Part
author = Frizzank

// --- asset parameters ---
MODEL
{
  model = FASA/Mercury/FASA_Atlas_LFT_Cone/Atlas_LFTCone2
}
rescaleFactor = 1.0
scale = 1.0

// --- node definitions ---
node_stack_top = 0.0, 3.501, 0.0, 0.0, 1.0, 0.0
node_stack_bottom = 0.0, -0.001, 0.0, 0.0, -1.0, 0.0
node_attach = 0.0, 0.0, 1.001, 0.0, 0.0, -1.0, 1

bulkheadProfiles = size1, srf

// --- editor parameters ---
TechRequired = generalRocketry
entryCost = 3000
cost = 750
category = Propulsion
subcategory = 0
title = Atlas Adapter Liquid Fuel Tank Tall
manufacturer = FASA
description = The taller liquid fuel tank adapter for the Atlas rocket. 



// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
attachRules = 1,0,1,1,0

// --- standard part parameters ---
mass = 1.0
dragModelType = default
maximum_drag = 0.15
minimum_drag = 0.15
angularDrag = 1.5
crashTolerance = 8
maxTemp = 1600
 bulkheadProfiles = size2, size1

explosionPotential = 0.75


RESOURCE
{
 name = LiquidFuel
 amount = 270
 maxAmount = 270
}

RESOURCE
{
 name = Oxidizer
 amount = 330
 maxAmount = 330
}
//Reflection shader plugin
    MODULE
    {
        name = ReflectiveShaderModule

        // Lower values for performance, higher values for aesthetics (you shouldn't ever need to go higher than 1024).
        CubeMapSize = 16

        // How deep the reflection will be ("how far the reflection camera will view")
        FarClipPlane = 500000000
		// How far away must something be before it is reflected
		NearClipPlane = 2

        // Set to false to render all 6 faces of the CubeMap at once (six times slower~)
        OneFacePerFrame = true

        // The shader to find. The reflective shaders are:
        // Reflective/Diffuse
        // Reflective/VertexLit
        // Reflective/Bumped Diffuse
		//Reflective/Bumped Specular
        ShaderName = Reflective/Bumped Specular
		realTimeReflection = False
		

        // The height of the parallax map. Values are accepted between 0.005 and 0.08.
        ParallaxHeight = 0.01

        // How reflective the reflection will be (Weakest 0.0 - 1.0 Strongest).
        ReflectionStrength = 0.25
		//ReflectionColor = 0, 0, 0, 0

        // Use this variable to specify which meshes to apply the shader to.
        // Not using this variable will default to the first found mesh.
        // Use the actual mesh name for the value. Or you could use:
        // all - to replace the shader on all meshes in the model.
        MeshesToChange = all

        // How shiny the specularity will be (if specular).
        // This value will be automatically set if it already exists on the previous shader and is not defined here.
        Shininess = 1.0
		updateRate = 160

        // These variables should be used together only.
        // These values will be automatically set if they already exist on the previous shader and are not defined here
        SpecColorR = 0.8
        SpecColorG = 0.8
        SpecColorB = 0.8
        SpecColorA = 0.8
		rimFalloff = 5.0
		rimColor = 0.8242, 0.6445, 0.1914, 1.0
		ReflectionColor = 0.6242, 0.6445, 0.69, 1.0
    }

}


