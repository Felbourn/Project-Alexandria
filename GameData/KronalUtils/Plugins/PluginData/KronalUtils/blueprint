Shader "Kronal/BluePrint" {
Properties {
	_MainTex ("Base (RGB)", Rect) = "white" {}
	_Color ("Base Color (RGB)", Color) = (0.0, 0.192, 0.325, 1.0)
	_MidColor ("Mid Color (RGB)", Color) = (0.0, 0.447, 0.733, 1.0)
	_Gamma ("Gamma", Range(0.0, 3.0)) = 1.0
	_ScaleX ("ScaleX", Range(0.0, 0.01)) = 0.01
	_ScaleY ("ScaleY", Range(0.0, 100.0)) = 78.233
}

SubShader {
	Pass {
		ZTest Always Cull Off ZWrite Off
		Fog { Mode off }

Program "vp" {
// Vertex combos: 1
//   opengl - ALU: 16 to 16
//   d3d9 - ALU: 16 to 16
//   d3d11 - ALU: 4 to 4, TEX: 0 to 0, FLOW: 1 to 1
//   d3d11_9x - ALU: 4 to 4, TEX: 0 to 0, FLOW: 1 to 1
SubProgram "opengl " {
Keywords { }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 9 [_Object2World]
"!!ARBvp1.0
# 16 ALU
PARAM c[13] = { { 0 },
		state.matrix.mvp,
		state.matrix.texture[0],
		program.local[9..12] };
TEMP R0;
TEMP R1;
TEMP R2;
DP4 R2.x, vertex.position, c[3];
MOV R1.z, R2.x;
DP4 R1.x, vertex.position, c[1];
DP4 R1.y, vertex.position, c[2];
DP4 R1.w, vertex.position, c[4];
MOV result.position, R1;
RCP R1.z, R2.x;
MOV R0.zw, c[0].x;
MOV R0.xy, vertex.texcoord[0];
DP4 result.texcoord[0].y, R0, c[6];
DP4 result.texcoord[0].x, R0, c[5];
MUL result.texcoord[1].xy, R1, R1.z;
DP4 result.texcoord[2].w, vertex.position, c[12];
DP4 result.texcoord[2].z, vertex.position, c[11];
DP4 result.texcoord[2].y, vertex.position, c[10];
DP4 result.texcoord[2].x, vertex.position, c[9];
END
# 16 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [glstate_matrix_texture0]
Matrix 8 [_Object2World]
"vs_2_0
; 16 ALU
def c12, 0.00000000, 0, 0, 0
dcl_position0 v0
dcl_texcoord0 v1
dp4 r2.x, v0, c2
mov r1.z, r2.x
dp4 r1.x, v0, c0
dp4 r1.y, v0, c1
dp4 r1.w, v0, c3
mov oPos, r1
rcp r1.z, r2.x
mov r0.zw, c12.x
mov r0.xy, v1
dp4 oT0.y, r0, c5
dp4 oT0.x, r0, c4
mul oT1.xy, r1, r1.z
dp4 oT2.w, v0, c11
dp4 oT2.z, v0, c10
dp4 oT2.y, v0, c9
dp4 oT2.x, v0, c8
"
}

SubProgram "d3d11 " {
Keywords { }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
ConstBuffer "UnityPerDrawTexMatrices" 768 // 576 used size, 5 vars
Matrix 512 [glstate_matrix_texture0] 4
BindCB "UnityPerDraw" 0
BindCB "UnityPerDrawTexMatrices" 1
// 13 instructions, 1 temp regs, 0 temp arrays:
// ALU 4 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0
eefiecedeidhfilihgcekdejahmalnbijpijnneeabaaaaaadiadaaaaadaaaaaa
cmaaaaaaiaaaaaaaaiabaaaaejfdeheoemaaaaaaacaaaaaaaiaaaaaadiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaaebaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafaepfdejfeejepeoaafeeffiedepepfceeaaklkl
epfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
heaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaafdfgfpfagphdgjhegjgpgoaafeeffied
epepfceeaaklklklfdeieefcciacaaaaeaaaabaaikaaaaaafjaaaaaeegiocaaa
aaaaaaaabaaaaaaafjaaaaaeegiocaaaabaaaaaaccaaaaaafpaaaaadpcbabaaa
aaaaaaaafpaaaaaddcbabaaaabaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaa
gfaaaaaddccabaaaabaaaaaagfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaa
acaaaaaagiaaaaacabaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaa
egiocaaaaaaaaaaaabaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaa
aaaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaa
egiocaaaaaaaaaaaacaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaa
aaaaaaaadgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaaaoaaaaahmccabaaa
abaaaaaaagaebaaaaaaaaaaakgakbaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaa
fgbfbaaaabaaaaaaegiacaaaabaaaaaacbaaaaaadcaaaaakdccabaaaabaaaaaa
egiacaaaabaaaaaacaaaaaaaagbabaaaabaaaaaaegaabaaaaaaaaaaadiaaaaai
pcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaanaaaaaadcaaaaak
pcaabaaaaaaaaaaaegiocaaaaaaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaa
aaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaaoaaaaaakgbkbaaa
aaaaaaaaegaobaaaaaaaaaaadcaaaaakpccabaaaacaaaaaaegiocaaaaaaaaaaa
apaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadoaaaaab"
}

SubProgram "gles " {
Keywords { }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = _glesMultiTexCoord0.xy;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 tmpvar_3;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.x = tmpvar_1.x;
  tmpvar_3.y = tmpvar_1.y;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = (glstate_matrix_texture0 * tmpvar_3).xy;
  xlv_TEXCOORD1 = (tmpvar_2.xy / tmpvar_2.z);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD0;
uniform highp float _Gamma;
uniform highp vec4 _MidColor;
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 original_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  original_2 = tmpvar_3;
  if ((original_2.w < 0.0001)) {
    highp float tmpvar_4;
    tmpvar_4 = abs((fract((xlv_TEXCOORD2.x * 0.01)) - 0.5));
    float tmpvar_5;
    if ((tmpvar_4 < 0.01)) {
      tmpvar_5 = 1.0;
    } else {
      tmpvar_5 = 0.0;
    };
    highp float tmpvar_6;
    tmpvar_6 = abs((fract((xlv_TEXCOORD2.y * 0.01)) - 0.5));
    float tmpvar_7;
    if ((tmpvar_6 < 0.01)) {
      tmpvar_7 = 1.0;
    } else {
      tmpvar_7 = 0.0;
    };
    highp float tmpvar_8;
    tmpvar_8 = abs((fract(((xlv_TEXCOORD2.x * 0.1) + 0.4)) - 0.5));
    float tmpvar_9;
    if ((tmpvar_8 < 0.05)) {
      tmpvar_9 = 1.0;
    } else {
      tmpvar_9 = 0.0;
    };
    highp float tmpvar_10;
    tmpvar_10 = abs((fract(((xlv_TEXCOORD2.y * 0.1) + 0.4)) - 0.5));
    float tmpvar_11;
    if ((tmpvar_10 < 0.05)) {
      tmpvar_11 = 1.0;
    } else {
      tmpvar_11 = 0.0;
    };
    highp vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = pow (abs((_Color + ((0.15 * clamp ((((tmpvar_5 + tmpvar_7) + tmpvar_9) + tmpvar_11), 0.0, 1.0)) * _MidColor))), vec4(_Gamma)).xyz;
    tmpvar_1 = tmpvar_12;
  } else {
    tmpvar_1 = original_2;
  };
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "glesdesktop " {
Keywords { }
"!!GLES


#ifdef VERTEX

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD1;
varying highp vec2 xlv_TEXCOORD0;
uniform highp mat4 glstate_matrix_texture0;
uniform highp mat4 _Object2World;
uniform highp mat4 glstate_matrix_mvp;
attribute vec4 _glesMultiTexCoord0;
attribute vec4 _glesVertex;
void main ()
{
  vec2 tmpvar_1;
  tmpvar_1 = _glesMultiTexCoord0.xy;
  highp vec4 tmpvar_2;
  tmpvar_2 = (glstate_matrix_mvp * _glesVertex);
  highp vec4 tmpvar_3;
  tmpvar_3.zw = vec2(0.0, 0.0);
  tmpvar_3.x = tmpvar_1.x;
  tmpvar_3.y = tmpvar_1.y;
  gl_Position = tmpvar_2;
  xlv_TEXCOORD0 = (glstate_matrix_texture0 * tmpvar_3).xy;
  xlv_TEXCOORD1 = (tmpvar_2.xy / tmpvar_2.z);
  xlv_TEXCOORD2 = (_Object2World * _glesVertex);
}



#endif
#ifdef FRAGMENT

varying highp vec4 xlv_TEXCOORD2;
varying highp vec2 xlv_TEXCOORD0;
uniform highp float _Gamma;
uniform highp vec4 _MidColor;
uniform highp vec4 _Color;
uniform sampler2D _MainTex;
void main ()
{
  mediump vec4 tmpvar_1;
  highp vec4 original_2;
  lowp vec4 tmpvar_3;
  tmpvar_3 = texture2D (_MainTex, xlv_TEXCOORD0);
  original_2 = tmpvar_3;
  if ((original_2.w < 0.0001)) {
    highp float tmpvar_4;
    tmpvar_4 = abs((fract((xlv_TEXCOORD2.x * 0.01)) - 0.5));
    float tmpvar_5;
    if ((tmpvar_4 < 0.01)) {
      tmpvar_5 = 1.0;
    } else {
      tmpvar_5 = 0.0;
    };
    highp float tmpvar_6;
    tmpvar_6 = abs((fract((xlv_TEXCOORD2.y * 0.01)) - 0.5));
    float tmpvar_7;
    if ((tmpvar_6 < 0.01)) {
      tmpvar_7 = 1.0;
    } else {
      tmpvar_7 = 0.0;
    };
    highp float tmpvar_8;
    tmpvar_8 = abs((fract(((xlv_TEXCOORD2.x * 0.1) + 0.4)) - 0.5));
    float tmpvar_9;
    if ((tmpvar_8 < 0.05)) {
      tmpvar_9 = 1.0;
    } else {
      tmpvar_9 = 0.0;
    };
    highp float tmpvar_10;
    tmpvar_10 = abs((fract(((xlv_TEXCOORD2.y * 0.1) + 0.4)) - 0.5));
    float tmpvar_11;
    if ((tmpvar_10 < 0.05)) {
      tmpvar_11 = 1.0;
    } else {
      tmpvar_11 = 0.0;
    };
    highp vec4 tmpvar_12;
    tmpvar_12.w = 1.0;
    tmpvar_12.xyz = pow (abs((_Color + ((0.15 * clamp ((((tmpvar_5 + tmpvar_7) + tmpvar_9) + tmpvar_11), 0.0, 1.0)) * _MidColor))), vec4(_Gamma)).xyz;
    tmpvar_1 = tmpvar_12;
  } else {
    tmpvar_1 = original_2;
  };
  gl_FragData[0] = tmpvar_1;
}



#endif"
}

SubProgram "flash " {
Keywords { }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
Matrix 0 [glstate_matrix_mvp]
Matrix 4 [glstate_matrix_texture0]
Matrix 8 [_Object2World]
"agal_vs
c12 0.0 0.0 0.0 0.0
[bc]
bdaaaaaaacaaabacaaaaaaoeaaaaaaaaacaaaaoeabaaaaaa dp4 r2.x, a0, c2
aaaaaaaaabaaaeacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r1.z, r2.x
bdaaaaaaabaaabacaaaaaaoeaaaaaaaaaaaaaaoeabaaaaaa dp4 r1.x, a0, c0
bdaaaaaaabaaacacaaaaaaoeaaaaaaaaabaaaaoeabaaaaaa dp4 r1.y, a0, c1
bdaaaaaaabaaaiacaaaaaaoeaaaaaaaaadaaaaoeabaaaaaa dp4 r1.w, a0, c3
aaaaaaaaaaaaapadabaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r1
afaaaaaaabaaaeacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa rcp r1.z, r2.x
aaaaaaaaaaaaamacamaaaaaaabaaaaaaaaaaaaaaaaaaaaaa mov r0.zw, c12.x
aaaaaaaaaaaaadacadaaaaoeaaaaaaaaaaaaaaaaaaaaaaaa mov r0.xy, a3
bdaaaaaaaaaaacaeaaaaaaoeacaaaaaaafaaaaoeabaaaaaa dp4 v0.y, r0, c5
bdaaaaaaaaaaabaeaaaaaaoeacaaaaaaaeaaaaoeabaaaaaa dp4 v0.x, r0, c4
adaaaaaaabaaadaeabaaaafeacaaaaaaabaaaakkacaaaaaa mul v1.xy, r1.xyyy, r1.z
bdaaaaaaacaaaiaeaaaaaaoeaaaaaaaaalaaaaoeabaaaaaa dp4 v2.w, a0, c11
bdaaaaaaacaaaeaeaaaaaaoeaaaaaaaaakaaaaoeabaaaaaa dp4 v2.z, a0, c10
bdaaaaaaacaaacaeaaaaaaoeaaaaaaaaajaaaaoeabaaaaaa dp4 v2.y, a0, c9
bdaaaaaaacaaabaeaaaaaaoeaaaaaaaaaiaaaaoeabaaaaaa dp4 v2.x, a0, c8
aaaaaaaaaaaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v0.zw, c0
aaaaaaaaabaaamaeaaaaaaoeabaaaaaaaaaaaaaaaaaaaaaa mov v1.zw, c0
"
}

SubProgram "d3d11_9x " {
Keywords { }
Bind "vertex" Vertex
Bind "texcoord" TexCoord0
ConstBuffer "UnityPerDraw" 336 // 256 used size, 6 vars
Matrix 0 [glstate_matrix_mvp] 4
Matrix 192 [_Object2World] 4
ConstBuffer "UnityPerDrawTexMatrices" 768 // 576 used size, 5 vars
Matrix 512 [glstate_matrix_texture0] 4
BindCB "UnityPerDraw" 0
BindCB "UnityPerDrawTexMatrices" 1
// 13 instructions, 1 temp regs, 0 temp arrays:
// ALU 4 float, 0 int, 0 uint
// TEX 0 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 1 static, 0 dynamic
"vs_4_0_level_9_1
eefiecedkajemhojlhddfnkjfemecfoklpfgfpfpabaaaaaakiaeaaaaaeaaaaaa
daaaaaaajmabaaaammadaaaacaaeaaaaebgpgodjgeabaaaageabaaaaaaacpopp
biabaaaaemaaaaaaadaaceaaaaaaeiaaaaaaeiaaaaaaceaaabaaeiaaaaaaaaaa
aeaaabaaaaaaaaaaaaaaamaaaeaaafaaaaaaaaaaabaacaaaacaaajaaaaaaaaaa
aaaaaaaaaaacpoppbpaaaaacafaaaaiaaaaaapjabpaaaaacafaaabiaabaaapja
afaaaaadaaaaadiaabaaffjaakaaoekaaeaaaaaeaaaaadoaajaaoekaabaaaaja
aaaaoeiaafaaaaadaaaaapiaaaaaffjaacaaoekaaeaaaaaeaaaaapiaabaaoeka
aaaaaajaaaaaoeiaaeaaaaaeaaaaapiaadaaoekaaaaakkjaaaaaoeiaaeaaaaae
aaaaapiaaeaaoekaaaaappjaaaaaoeiaagaaaaacabaaabiaaaaakkiaafaaaaad
aaaaamoaaaaabeiaabaaaaiaafaaaaadabaaapiaaaaaffjaagaaoekaaeaaaaae
abaaapiaafaaoekaaaaaaajaabaaoeiaaeaaaaaeabaaapiaahaaoekaaaaakkja
abaaoeiaaeaaaaaeabaaapoaaiaaoekaaaaappjaabaaoeiaaeaaaaaeaaaaadma
aaaappiaaaaaoekaaaaaoeiaabaaaaacaaaaammaaaaaoeiappppaaaafdeieefc
ciacaaaaeaaaabaaikaaaaaafjaaaaaeegiocaaaaaaaaaaabaaaaaaafjaaaaae
egiocaaaabaaaaaaccaaaaaafpaaaaadpcbabaaaaaaaaaaafpaaaaaddcbabaaa
abaaaaaaghaaaaaepccabaaaaaaaaaaaabaaaaaagfaaaaaddccabaaaabaaaaaa
gfaaaaadmccabaaaabaaaaaagfaaaaadpccabaaaacaaaaaagiaaaaacabaaaaaa
diaaaaaipcaabaaaaaaaaaaafgbfbaaaaaaaaaaaegiocaaaaaaaaaaaabaaaaaa
dcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaaaaaaaaaagbabaaaaaaaaaaa
egaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaaaaaaaaaaacaaaaaa
kgbkbaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaadaaaaaapgbpbaaaaaaaaaaaegaobaaaaaaaaaaadgaaaaafpccabaaa
aaaaaaaaegaobaaaaaaaaaaaaoaaaaahmccabaaaabaaaaaaagaebaaaaaaaaaaa
kgakbaaaaaaaaaaadiaaaaaidcaabaaaaaaaaaaafgbfbaaaabaaaaaaegiacaaa
abaaaaaacbaaaaaadcaaaaakdccabaaaabaaaaaaegiacaaaabaaaaaacaaaaaaa
agbabaaaabaaaaaaegaabaaaaaaaaaaadiaaaaaipcaabaaaaaaaaaaafgbfbaaa
aaaaaaaaegiocaaaaaaaaaaaanaaaaaadcaaaaakpcaabaaaaaaaaaaaegiocaaa
aaaaaaaaamaaaaaaagbabaaaaaaaaaaaegaobaaaaaaaaaaadcaaaaakpcaabaaa
aaaaaaaaegiocaaaaaaaaaaaaoaaaaaakgbkbaaaaaaaaaaaegaobaaaaaaaaaaa
dcaaaaakpccabaaaacaaaaaaegiocaaaaaaaaaaaapaaaaaapgbpbaaaaaaaaaaa
egaobaaaaaaaaaaadoaaaaabejfdeheoemaaaaaaacaaaaaaaiaaaaaadiaaaaaa
aaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapapaaaaebaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaafaepfdejfeejepeoaafeeffiedepepfceeaaklkl
epfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaaaaaaaaaaabaaaaaaadaaaaaa
aaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaaadaaaaaaabaaaaaaadamaaaa
heaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaaamadaaaaheaaaaaaacaaaaaa
aaaaaaaaadaaaaaaacaaaaaaapaaaaaafdfgfpfagphdgjhegjgpgoaafeeffied
epepfceeaaklklkl"
}

SubProgram "gles3 " {
Keywords { }
"!!GLES3#version 300 es


#ifdef VERTEX

#define gl_Vertex _glesVertex
in vec4 _glesVertex;
#define gl_MultiTexCoord0 _glesMultiTexCoord0
in vec4 _glesMultiTexCoord0;

#line 150
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 186
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 180
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 313
struct v2f {
    highp vec4 pos;
    highp vec2 uv;
    highp vec2 screenPos;
    highp vec4 wpos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_LightPosition[4];
uniform highp vec4 unity_LightAtten[4];
#line 19
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
#line 23
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
#line 27
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
uniform highp vec4 _LightSplitsNear;
#line 31
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
#line 35
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
uniform highp mat4 _Object2World;
#line 39
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
uniform highp mat4 glstate_matrix_texture0;
#line 43
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
uniform highp mat4 glstate_matrix_projection;
#line 47
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform lowp vec4 unity_ColorSpaceGrey;
#line 76
#line 81
#line 86
#line 90
#line 95
#line 119
#line 136
#line 157
#line 165
#line 192
#line 205
#line 214
#line 219
#line 228
#line 233
#line 242
#line 259
#line 264
#line 290
#line 298
#line 302
#line 306
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_TexelSize;
uniform highp vec4 _Color;
uniform highp vec4 _MidColor;
#line 310
uniform highp float _Gamma;
uniform highp float _ScaleX;
uniform highp float _ScaleY;
#line 321
#line 330
#line 334
#line 192
highp vec2 MultiplyUV( in highp mat4 mat, in highp vec2 inUV ) {
    highp vec4 temp = vec4( inUV.x, inUV.y, 0.0, 0.0);
    temp = (mat * temp);
    #line 196
    return temp.xy;
}
#line 321
v2f vert( in appdata_img v ) {
    v2f i;
    i.pos = (glstate_matrix_mvp * v.vertex);
    #line 325
    i.uv = MultiplyUV( glstate_matrix_texture0, v.texcoord);
    i.screenPos = (i.pos.xy / i.pos.z);
    i.wpos = (_Object2World * v.vertex);
    return i;
}
out highp vec2 xlv_TEXCOORD0;
out highp vec2 xlv_TEXCOORD1;
out highp vec4 xlv_TEXCOORD2;
void main() {
    v2f xl_retval;
    appdata_img xlt_v;
    xlt_v.vertex = vec4(gl_Vertex);
    xlt_v.texcoord = vec2(gl_MultiTexCoord0);
    xl_retval = vert( xlt_v);
    gl_Position = vec4(xl_retval.pos);
    xlv_TEXCOORD0 = vec2(xl_retval.uv);
    xlv_TEXCOORD1 = vec2(xl_retval.screenPos);
    xlv_TEXCOORD2 = vec4(xl_retval.wpos);
}


#endif
#ifdef FRAGMENT

#define gl_FragData _glesFragData
layout(location = 0) out mediump vec4 _glesFragData[4];
float xll_saturate_f( float x) {
  return clamp( x, 0.0, 1.0);
}
vec2 xll_saturate_vf2( vec2 x) {
  return clamp( x, 0.0, 1.0);
}
vec3 xll_saturate_vf3( vec3 x) {
  return clamp( x, 0.0, 1.0);
}
vec4 xll_saturate_vf4( vec4 x) {
  return clamp( x, 0.0, 1.0);
}
mat2 xll_saturate_mf2x2(mat2 m) {
  return mat2( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0));
}
mat3 xll_saturate_mf3x3(mat3 m) {
  return mat3( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0));
}
mat4 xll_saturate_mf4x4(mat4 m) {
  return mat4( clamp(m[0], 0.0, 1.0), clamp(m[1], 0.0, 1.0), clamp(m[2], 0.0, 1.0), clamp(m[3], 0.0, 1.0));
}
#line 150
struct v2f_vertex_lit {
    highp vec2 uv;
    lowp vec4 diff;
    lowp vec4 spec;
};
#line 186
struct v2f_img {
    highp vec4 pos;
    mediump vec2 uv;
};
#line 180
struct appdata_img {
    highp vec4 vertex;
    mediump vec2 texcoord;
};
#line 313
struct v2f {
    highp vec4 pos;
    highp vec2 uv;
    highp vec2 screenPos;
    highp vec4 wpos;
};
uniform highp vec4 _Time;
uniform highp vec4 _SinTime;
#line 3
uniform highp vec4 _CosTime;
uniform highp vec4 unity_DeltaTime;
uniform highp vec3 _WorldSpaceCameraPos;
uniform highp vec4 _ProjectionParams;
#line 7
uniform highp vec4 _ScreenParams;
uniform highp vec4 _ZBufferParams;
uniform highp vec4 unity_CameraWorldClipPlanes[6];
uniform highp vec4 _WorldSpaceLightPos0;
#line 11
uniform highp vec4 _LightPositionRange;
uniform highp vec4 unity_4LightPosX0;
uniform highp vec4 unity_4LightPosY0;
uniform highp vec4 unity_4LightPosZ0;
#line 15
uniform highp vec4 unity_4LightAtten0;
uniform highp vec4 unity_LightColor[4];
uniform highp vec4 unity_LightPosition[4];
uniform highp vec4 unity_LightAtten[4];
#line 19
uniform highp vec4 unity_SHAr;
uniform highp vec4 unity_SHAg;
uniform highp vec4 unity_SHAb;
uniform highp vec4 unity_SHBr;
#line 23
uniform highp vec4 unity_SHBg;
uniform highp vec4 unity_SHBb;
uniform highp vec4 unity_SHC;
uniform highp vec3 unity_LightColor0;
uniform highp vec3 unity_LightColor1;
uniform highp vec3 unity_LightColor2;
uniform highp vec3 unity_LightColor3;
#line 27
uniform highp vec4 unity_ShadowSplitSpheres[4];
uniform highp vec4 unity_ShadowSplitSqRadii;
uniform highp vec4 unity_LightShadowBias;
uniform highp vec4 _LightSplitsNear;
#line 31
uniform highp vec4 _LightSplitsFar;
uniform highp mat4 unity_World2Shadow[4];
uniform highp vec4 _LightShadowData;
uniform highp vec4 unity_ShadowFadeCenterAndType;
#line 35
uniform highp mat4 glstate_matrix_mvp;
uniform highp mat4 glstate_matrix_modelview0;
uniform highp mat4 glstate_matrix_invtrans_modelview0;
uniform highp mat4 _Object2World;
#line 39
uniform highp mat4 _World2Object;
uniform highp vec4 unity_Scale;
uniform highp mat4 glstate_matrix_transpose_modelview0;
uniform highp mat4 glstate_matrix_texture0;
#line 43
uniform highp mat4 glstate_matrix_texture1;
uniform highp mat4 glstate_matrix_texture2;
uniform highp mat4 glstate_matrix_texture3;
uniform highp mat4 glstate_matrix_projection;
#line 47
uniform highp vec4 glstate_lightmodel_ambient;
uniform highp mat4 unity_MatrixV;
uniform highp mat4 unity_MatrixVP;
uniform lowp vec4 unity_ColorSpaceGrey;
#line 76
#line 81
#line 86
#line 90
#line 95
#line 119
#line 136
#line 157
#line 165
#line 192
#line 205
#line 214
#line 219
#line 228
#line 233
#line 242
#line 259
#line 264
#line 290
#line 298
#line 302
#line 306
uniform sampler2D _MainTex;
uniform highp vec4 _MainTex_TexelSize;
uniform highp vec4 _Color;
uniform highp vec4 _MidColor;
#line 310
uniform highp float _Gamma;
uniform highp float _ScaleX;
uniform highp float _ScaleY;
#line 321
#line 330
#line 334
#line 334
highp float grid( in highp vec2 co ) {
    highp vec2 spacing = vec2( 0.01, 0.01);
    highp vec2 smallspacing = vec2( 0.1, 0.1);
    #line 338
    return xll_saturate_f(((((( (abs((fract((co.x * spacing.x)) - 0.5)) < spacing.x) ) ? ( 1.0 ) : ( 0.0 )) + (( (abs((fract((co.y * spacing.y)) - 0.5)) < spacing.y) ) ? ( 1.0 ) : ( 0.0 ))) + (( (abs((fract(((co.x * smallspacing.x) + (smallspacing.x * 4.0))) - 0.5)) < (smallspacing.x * 0.5)) ) ? ( 1.0 ) : ( 0.0 ))) + (( (abs((fract(((co.y * smallspacing.y) + (smallspacing.y * 4.0))) - 0.5)) < (smallspacing.y * 0.5)) ) ? ( 1.0 ) : ( 0.0 ))));
}
#line 340
mediump vec4 frag( in v2f i ) {
    #line 342
    highp vec4 original = texture( _MainTex, i.uv);
    if ((original.w < 0.0001)){
        highp float g = grid( i.wpos.xy);
        #line 346
        return vec4( pow( abs((_Color + ((0.15 * g) * _MidColor))), vec4( _Gamma)).xyz, 1.0);
    }
    else{
        #line 350
        return original;
    }
}
in highp vec2 xlv_TEXCOORD0;
in highp vec2 xlv_TEXCOORD1;
in highp vec4 xlv_TEXCOORD2;
void main() {
    mediump vec4 xl_retval;
    v2f xlt_i;
    xlt_i.pos = vec4(0.0);
    xlt_i.uv = vec2(xlv_TEXCOORD0);
    xlt_i.screenPos = vec2(xlv_TEXCOORD1);
    xlt_i.wpos = vec4(xlv_TEXCOORD2);
    xl_retval = frag( xlt_i);
    gl_FragData[0] = vec4(xl_retval);
}


#endif"
}

}
Program "fp" {
// Fragment combos: 1
//   opengl - ALU: 40 to 40, TEX: 1 to 1
//   d3d9 - ALU: 48 to 48, TEX: 1 to 1
//   d3d11 - ALU: 18 to 18, TEX: 1 to 1, FLOW: 4 to 4
//   d3d11_9x - ALU: 18 to 18, TEX: 1 to 1, FLOW: 4 to 4
SubProgram "opengl " {
Keywords { }
Vector 0 [_Color]
Vector 1 [_MidColor]
Float 2 [_Gamma]
SetTexture 0 [_MainTex] 2D
"!!ARBfp1.0
OPTION ARB_precision_hint_fastest;
# 40 ALU, 1 TEX
PARAM c[6] = { program.local[0..2],
		{ 1, 0, 9.9999997e-005, 0.15000001 },
		{ 0.0099999998, 0.5, 0.1, 0.40000001 },
		{ 0.050000001 } };
TEMP R0;
TEMP R1;
TEMP R2;
TEX R0, fragment.texcoord[0], texture[0], 2D;
MUL R1.y, fragment.texcoord[2], c[4].x;
MUL R1.x, fragment.texcoord[2], c[4];
FRC R1.y, R1;
FRC R1.x, R1;
ADD R1.y, R1, -c[4];
ADD R1.x, R1, -c[4].y;
ABS R1.y, R1;
ABS R1.x, R1;
ADD R1.y, R1, -c[4].x;
ADD R1.x, R1, -c[4];
MAD R1.z, fragment.texcoord[2].y, c[4], c[4].w;
FRC R1.z, R1;
ADD R1.z, R1, -c[4].y;
ABS R1.z, R1;
ADD R1.z, R1, -c[5].x;
SLT R1.w, R0, c[3].z;
ABS R1.w, R1;
CMP R2.x, -R1.w, c[3].y, c[3];
CMP R1.y, R1, c[3].x, c[3];
CMP R1.x, R1, c[3], c[3].y;
ADD R1.x, R1, R1.y;
MAD R1.y, fragment.texcoord[2].x, c[4].z, c[4].w;
FRC R1.y, R1;
ADD R1.y, R1, -c[4];
ABS R1.y, R1;
ADD R1.y, R1, -c[5].x;
CMP R1.y, R1, c[3].x, c[3];
ADD R1.x, R1, R1.y;
CMP R1.z, R1, c[3].x, c[3].y;
ADD_SAT R1.x, R1, R1.z;
MUL R1.xyz, R1.x, c[1];
MUL R1.xyz, R1, c[3].w;
ADD R1.xyz, R1, c[0];
ABS R1.xyz, R1;
POW R1.x, R1.x, c[2].x;
POW R1.y, R1.y, c[2].x;
MOV R1.w, c[3].x;
POW R1.z, R1.z, c[2].x;
CMP result.color, -R2.x, R0, R1;
END
# 40 instructions, 3 R-regs
"
}

SubProgram "d3d9 " {
Keywords { }
Vector 0 [_Color]
Vector 1 [_MidColor]
Float 2 [_Gamma]
SetTexture 0 [_MainTex] 2D
"ps_2_0
; 48 ALU, 1 TEX
dcl_2d s0
def c3, -0.00010000, 0.00000000, 1.00000000, 0.01000000
def c4, -0.50000000, -0.01000000, 0.10000000, 0.40000001
def c5, -0.05000000, 0.15000001, 0, 0
dcl t0.xy
dcl t2.xy
texld r0, t0, s0
mul r1.x, t2.y, c3.w
mul r2.x, t2, c3.w
frc r1.x, r1
frc r2.x, r2
add r1.x, r1, c4
add r2.x, r2, c4
abs r1.x, r1
abs r2.x, r2
add r1.x, r1, c4.y
add r2.x, r2, c4.y
mad r3.x, t2, c4.z, c4.w
frc r3.x, r3
add r3.x, r3, c4
abs r3.x, r3
add r3.x, r3, c5
cmp r2.x, r2, c3.y, c3.z
cmp r1.x, r1, c3.y, c3.z
add r1.x, r2, r1
cmp r3.x, r3, c3.y, c3.z
mad r2.x, t2.y, c4.z, c4.w
frc r2.x, r2
add r2.x, r2, c4
abs r2.x, r2
add r2.x, r2, c5
add r1.x, r1, r3
cmp r2.x, r2, c3.y, c3.z
add_sat r1.x, r1, r2
add r2.x, r0.w, c3
mul r1.xyz, r1.x, c1
mul r1.xyz, r1, c5.y
add r1.xyz, r1, c0
abs r1.xyz, r1
pow r3.x, r1.x, c2.x
cmp r2.x, r2, c3.y, c3.z
abs_pp r1.x, r2
pow r2.y, r1.y, c2.x
mov r2.x, r3.x
pow r3.x, r1.z, c2.x
mov_pp r2.w, c3.z
mov r2.z, r3.x
cmp_pp r0, -r1.x, r0, r2
mov_pp oC0, r0
"
}

SubProgram "d3d11 " {
Keywords { }
ConstBuffer "$Globals" 80 // 68 used size, 7 vars
Vector 32 [_Color] 4
Vector 48 [_MidColor] 4
Float 64 [_Gamma]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 29 instructions, 2 temp regs, 0 temp arrays:
// ALU 16 float, 0 int, 2 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 3 static, 1 dynamic
"ps_4_0
eefiecedpdedndckeofpnkommjfhkppbolbmkjldabaaaaaagaaeaaaaadaaaaaa
cmaaaaaaleaaaaaaoiaaaaaaejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaaapadaaaafdfgfpfa
gphdgjhegjgpgoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklklfdeieefchaadaaaaeaaaaaaanmaaaaaafjaaaaaeegiocaaa
aaaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaafibiaaaeaahabaaaaaaaaaaa
ffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaaddcbabaaaacaaaaaagfaaaaad
pccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaajpcaabaaaaaaaaaaaegbabaaa
abaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaadbaaaaahbcaabaaaabaaaaaa
dkaabaaaaaaaaaaaabeaaaaabhlhnbdibpaaaeadakaabaaaabaaaaaadiaaaaak
dcaabaaaabaaaaaaegbabaaaacaaaaaaaceaaaaaaknhcddmaknhcddmaaaaaaaa
aaaaaaaabkaaaaafdcaabaaaabaaaaaaegaabaaaabaaaaaaaaaaaaakdcaabaaa
abaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaaalpaaaaaalpaaaaaaaaaaaaaaaa
dbaaaaaldcaabaaaabaaaaaaegaabaiaibaaaaaaabaaaaaaaceaaaaaaknhcddm
aknhcddmaaaaaaaaaaaaaaaaabaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaa
aceaaaaaaaaaiadpaaaaiadpaaaaaaaaaaaaaaaaaaaaaaahbcaabaaaabaaaaaa
bkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaapgcaabaaaabaaaaaaagbbbaaa
acaaaaaaaceaaaaaaaaaaaaamnmmmmdnmnmmmmdnaaaaaaaaaceaaaaaaaaaaaaa
mnmmmmdomnmmmmdoaaaaaaaabkaaaaafgcaabaaaabaaaaaafgagbaaaabaaaaaa
aaaaaaakgcaabaaaabaaaaaafgagbaaaabaaaaaaaceaaaaaaaaaaaaaaaaaaalp
aaaaaalpaaaaaaaadbaaaaalgcaabaaaabaaaaaafgagbaiaibaaaaaaabaaaaaa
aceaaaaaaaaaaaaamnmmemdnmnmmemdnaaaaaaaaabaaaaakgcaabaaaabaaaaaa
fgagbaaaabaaaaaaaceaaaaaaaaaaaaaaaaaiadpaaaaiadpaaaaaaaaaaaaaaah
bcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaaaaaaaaahbcaabaaa
abaaaaaackaabaaaabaaaaaaakaabaaaabaaaaaaddaaaaahbcaabaaaabaaaaaa
akaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaahbcaabaaaabaaaaaaakaabaaa
abaaaaaaabeaaaaajkjjbjdodcaaaaalhcaabaaaabaaaaaaagaabaaaabaaaaaa
egiccaaaaaaaaaaaadaaaaaaegiccaaaaaaaaaaaacaaaaaacpaaaaaghcaabaaa
abaaaaaaegacbaiaibaaaaaaabaaaaaadiaaaaaihcaabaaaabaaaaaaegacbaaa
abaaaaaaagiacaaaaaaaaaaaaeaaaaaabjaaaaafhccabaaaaaaaaaaaegacbaaa
abaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaaaaaaiadpdoaaaaabbcaaaaab
dgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaadoaaaaabbfaaaaabdoaaaaab
"
}

SubProgram "gles " {
Keywords { }
"!!GLES"
}

SubProgram "glesdesktop " {
Keywords { }
"!!GLES"
}

SubProgram "flash " {
Keywords { }
Vector 0 [_Color]
Vector 1 [_MidColor]
Float 2 [_Gamma]
SetTexture 0 [_MainTex] 2D
"agal_ps
c3 -0.0001 0.0 1.0 0.01
c4 -0.5 -0.01 0.1 0.4
c5 -0.05 0.15 0.0 0.0
[bc]
ciaaaaaaaaaaapacaaaaaaoeaeaaaaaaaaaaaaaaafaababb tex r0, v0, s0 <2d wrap linear point>
adaaaaaaabaaabacacaaaaffaeaaaaaaadaaaappabaaaaaa mul r1.x, v2.y, c3.w
adaaaaaaacaaabacacaaaaoeaeaaaaaaadaaaappabaaaaaa mul r2.x, v2, c3.w
aiaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r1.x, r1.x
aiaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r2.x, r2.x
abaaaaaaabaaabacabaaaaaaacaaaaaaaeaaaaoeabaaaaaa add r1.x, r1.x, c4
abaaaaaaacaaabacacaaaaaaacaaaaaaaeaaaaoeabaaaaaa add r2.x, r2.x, c4
beaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa abs r1.x, r1.x
beaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa abs r2.x, r2.x
abaaaaaaabaaabacabaaaaaaacaaaaaaaeaaaaffabaaaaaa add r1.x, r1.x, c4.y
abaaaaaaacaaabacacaaaaaaacaaaaaaaeaaaaffabaaaaaa add r2.x, r2.x, c4.y
adaaaaaaadaaabacacaaaaoeaeaaaaaaaeaaaakkabaaaaaa mul r3.x, v2, c4.z
abaaaaaaadaaabacadaaaaaaacaaaaaaaeaaaappabaaaaaa add r3.x, r3.x, c4.w
aiaaaaaaadaaabacadaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r3.x, r3.x
abaaaaaaadaaabacadaaaaaaacaaaaaaaeaaaaoeabaaaaaa add r3.x, r3.x, c4
beaaaaaaadaaabacadaaaaaaacaaaaaaaaaaaaaaaaaaaaaa abs r3.x, r3.x
abaaaaaaadaaabacadaaaaaaacaaaaaaafaaaaoeabaaaaaa add r3.x, r3.x, c5
ckaaaaaaacaaabacacaaaaaaacaaaaaaafaaaakkabaaaaaa slt r2.x, r2.x, c5.z
ckaaaaaaabaaabacabaaaaaaacaaaaaaafaaaakkabaaaaaa slt r1.x, r1.x, c5.z
abaaaaaaabaaabacacaaaaaaacaaaaaaabaaaaaaacaaaaaa add r1.x, r2.x, r1.x
ckaaaaaaadaaabacadaaaaaaacaaaaaaafaaaakkabaaaaaa slt r3.x, r3.x, c5.z
adaaaaaaacaaabacacaaaaffaeaaaaaaaeaaaakkabaaaaaa mul r2.x, v2.y, c4.z
abaaaaaaacaaabacacaaaaaaacaaaaaaaeaaaappabaaaaaa add r2.x, r2.x, c4.w
aiaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa frc r2.x, r2.x
abaaaaaaacaaabacacaaaaaaacaaaaaaaeaaaaoeabaaaaaa add r2.x, r2.x, c4
beaaaaaaacaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa abs r2.x, r2.x
abaaaaaaacaaabacacaaaaaaacaaaaaaafaaaaoeabaaaaaa add r2.x, r2.x, c5
abaaaaaaabaaabacabaaaaaaacaaaaaaadaaaaaaacaaaaaa add r1.x, r1.x, r3.x
ckaaaaaaacaaabacacaaaaaaacaaaaaaafaaaakkabaaaaaa slt r2.x, r2.x, c5.z
abaaaaaaabaaabacabaaaaaaacaaaaaaacaaaaaaacaaaaaa add r1.x, r1.x, r2.x
bgaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa sat r1.x, r1.x
abaaaaaaacaaabacaaaaaappacaaaaaaadaaaaoeabaaaaaa add r2.x, r0.w, c3
adaaaaaaabaaahacabaaaaaaacaaaaaaabaaaaoeabaaaaaa mul r1.xyz, r1.x, c1
adaaaaaaabaaahacabaaaakeacaaaaaaafaaaaffabaaaaaa mul r1.xyz, r1.xyzz, c5.y
abaaaaaaabaaahacabaaaakeacaaaaaaaaaaaaoeabaaaaaa add r1.xyz, r1.xyzz, c0
beaaaaaaabaaahacabaaaakeacaaaaaaaaaaaaaaaaaaaaaa abs r1.xyz, r1.xyzz
alaaaaaaadaaapacabaaaaaaacaaaaaaacaaaaaaabaaaaaa pow r3, r1.x, c2.x
ckaaaaaaacaaabacacaaaaaaacaaaaaaafaaaakkabaaaaaa slt r2.x, r2.x, c5.z
beaaaaaaabaaabacacaaaaaaacaaaaaaaaaaaaaaaaaaaaaa abs r1.x, r2.x
alaaaaaaacaaapacabaaaaffacaaaaaaacaaaaaaabaaaaaa pow r2, r1.y, c2.x
aaaaaaaaacaaabacadaaaaaaacaaaaaaaaaaaaaaaaaaaaaa mov r2.x, r3.x
alaaaaaaadaaapacabaaaakkacaaaaaaacaaaaaaabaaaaaa pow r3, r1.z, c2.x
aaaaaaaaacaaaiacadaaaakkabaaaaaaaaaaaaaaaaaaaaaa mov r2.w, c3.z
aaaaaaaaacaaaeacadaaaakkacaaaaaaaaaaaaaaaaaaaaaa mov r2.z, r3.z
bfaaaaaaabaaabacabaaaaaaacaaaaaaaaaaaaaaaaaaaaaa neg r1.x, r1.x
ckaaaaaaabaaapacabaaaaaaacaaaaaaafaaaakkabaaaaaa slt r1, r1.x, c5.z
acaaaaaaacaaapacacaaaaoeacaaaaaaaaaaaaoeacaaaaaa sub r2, r2, r0
adaaaaaaacaaapacacaaaaoeacaaaaaaabaaaaoeacaaaaaa mul r2, r2, r1
abaaaaaaaaaaapacacaaaaoeacaaaaaaaaaaaaoeacaaaaaa add r0, r2, r0
aaaaaaaaaaaaapadaaaaaaoeacaaaaaaaaaaaaaaaaaaaaaa mov o0, r0
"
}

SubProgram "d3d11_9x " {
Keywords { }
ConstBuffer "$Globals" 80 // 68 used size, 7 vars
Vector 32 [_Color] 4
Vector 48 [_MidColor] 4
Float 64 [_Gamma]
BindCB "$Globals" 0
SetTexture 0 [_MainTex] 2D 0
// 29 instructions, 2 temp regs, 0 temp arrays:
// ALU 16 float, 0 int, 2 uint
// TEX 1 (0 load, 0 comp, 0 bias, 0 grad)
// FLOW 3 static, 1 dynamic
"ps_4_0_level_9_1
eefiecedjeododgkhnmonipebiidlmkmjbcjnjoiabaaaaaaiiahaaaaaeaaaaaa
daaaaaaafeadaaaammagaaaafeahaaaaebgpgodjbmadaaaabmadaaaaaaacpppp
oiacaaaadeaaaaaaabaaciaaaaaadeaaaaaadeaaabaaceaaaaaadeaaaaaaaaaa
aaaaacaaadaaaaaaaaaaaaaaaaacppppfbaaaaafadaaapkabhlhnbliaknhcddm
aaaaaalpaknhcdlmfbaaaaafaeaaapkaaaaaaaaaaaaaiadpmnmmmmdnmnmmmmdo
fbaaaaafafaaapkamnmmemlnjkjjbjdoaaaaaaaaaaaaaaaabpaaaaacaaaaaaia
aaaaaplabpaaaaacaaaaaaiaabaaaplabpaaaaacaaaaaajaaaaiapkaecaaaaad
aaaacpiaaaaaoelaaaaioekaafaaaaadabaaaiiaabaaaalaadaaffkabdaaaaac
abaaabiaabaappiaacaaaaadabaaabiaabaaaaiaadaakkkacdaaaaacabaaabia
abaaaaiaacaaaaadabaaabiaabaaaaiaadaappkaafaaaaadabaaaciaabaaffla
adaaffkabdaaaaacabaaaciaabaaffiaacaaaaadabaaaciaabaaffiaadaakkka
cdaaaaacabaaaciaabaaffiaacaaaaadabaaaciaabaaffiaadaappkafiaaaaae
abaaadiaabaaoeiaaeaaaakaaeaaffkaacaaaaadabaaabiaabaaffiaabaaaaia
aeaaaaaeabaaaciaabaaaalaaeaakkkaaeaappkabdaaaaacabaaaciaabaaffia
acaaaaadabaaaciaabaaffiaadaakkkacdaaaaacabaaaciaabaaffiaacaaaaad
abaaaciaabaaffiaafaaaakafiaaaaaeabaaaciaabaaffiaaeaaaakaaeaaffka
acaaaaadabaaabiaabaaffiaabaaaaiaaeaaaaaeabaaaciaabaafflaaeaakkka
aeaappkabdaaaaacabaaaciaabaaffiaacaaaaadabaaaciaabaaffiaadaakkka
cdaaaaacabaaaciaabaaffiaacaaaaadabaaaciaabaaffiaafaaaakafiaaaaae
abaaaciaabaaffiaaeaaaakaaeaaffkaacaaaaadabaabbiaabaaffiaabaaaaia
afaaaaadabaaabiaabaaaaiaafaaffkaabaaaaacacaaahiaabaaoekaaeaaaaae
abaaahiaabaaaaiaacaaoeiaaaaaoekacdaaaaacabaaahiaabaaoeiaapaaaaac
acaaabiaabaaaaiaapaaaaacacaaaciaabaaffiaapaaaaacacaaaeiaabaakkia
afaaaaadabaaahiaacaaoeiaacaaaakaaoaaaaacacaacbiaabaaaaiaaoaaaaac
acaacciaabaaffiaaoaaaaacacaaceiaabaakkiaabaaaaacacaaaiiaaeaaffka
acaaaaadabaaabiaaaaappiaadaaaakafiaaaaaeaaaacpiaabaaaaiaaaaaoeia
acaaoeiaabaaaaacaaaicpiaaaaaoeiappppaaaafdeieefchaadaaaaeaaaaaaa
nmaaaaaafjaaaaaeegiocaaaaaaaaaaaafaaaaaafkaaaaadaagabaaaaaaaaaaa
fibiaaaeaahabaaaaaaaaaaaffffaaaagcbaaaaddcbabaaaabaaaaaagcbaaaad
dcbabaaaacaaaaaagfaaaaadpccabaaaaaaaaaaagiaaaaacacaaaaaaefaaaaaj
pcaabaaaaaaaaaaaegbabaaaabaaaaaaeghobaaaaaaaaaaaaagabaaaaaaaaaaa
dbaaaaahbcaabaaaabaaaaaadkaabaaaaaaaaaaaabeaaaaabhlhnbdibpaaaead
akaabaaaabaaaaaadiaaaaakdcaabaaaabaaaaaaegbabaaaacaaaaaaaceaaaaa
aknhcddmaknhcddmaaaaaaaaaaaaaaaabkaaaaafdcaabaaaabaaaaaaegaabaaa
abaaaaaaaaaaaaakdcaabaaaabaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaaalp
aaaaaalpaaaaaaaaaaaaaaaadbaaaaaldcaabaaaabaaaaaaegaabaiaibaaaaaa
abaaaaaaaceaaaaaaknhcddmaknhcddmaaaaaaaaaaaaaaaaabaaaaakdcaabaaa
abaaaaaaegaabaaaabaaaaaaaceaaaaaaaaaiadpaaaaiadpaaaaaaaaaaaaaaaa
aaaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaaabaaaaaadcaaaaap
gcaabaaaabaaaaaaagbbbaaaacaaaaaaaceaaaaaaaaaaaaamnmmmmdnmnmmmmdn
aaaaaaaaaceaaaaaaaaaaaaamnmmmmdomnmmmmdoaaaaaaaabkaaaaafgcaabaaa
abaaaaaafgagbaaaabaaaaaaaaaaaaakgcaabaaaabaaaaaafgagbaaaabaaaaaa
aceaaaaaaaaaaaaaaaaaaalpaaaaaalpaaaaaaaadbaaaaalgcaabaaaabaaaaaa
fgagbaiaibaaaaaaabaaaaaaaceaaaaaaaaaaaaamnmmemdnmnmmemdnaaaaaaaa
abaaaaakgcaabaaaabaaaaaafgagbaaaabaaaaaaaceaaaaaaaaaaaaaaaaaiadp
aaaaiadpaaaaaaaaaaaaaaahbcaabaaaabaaaaaabkaabaaaabaaaaaaakaabaaa
abaaaaaaaaaaaaahbcaabaaaabaaaaaackaabaaaabaaaaaaakaabaaaabaaaaaa
ddaaaaahbcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaaaaaaiadpdiaaaaah
bcaabaaaabaaaaaaakaabaaaabaaaaaaabeaaaaajkjjbjdodcaaaaalhcaabaaa
abaaaaaaagaabaaaabaaaaaaegiccaaaaaaaaaaaadaaaaaaegiccaaaaaaaaaaa
acaaaaaacpaaaaaghcaabaaaabaaaaaaegacbaiaibaaaaaaabaaaaaadiaaaaai
hcaabaaaabaaaaaaegacbaaaabaaaaaaagiacaaaaaaaaaaaaeaaaaaabjaaaaaf
hccabaaaaaaaaaaaegacbaaaabaaaaaadgaaaaaficcabaaaaaaaaaaaabeaaaaa
aaaaiadpdoaaaaabbcaaaaabdgaaaaafpccabaaaaaaaaaaaegaobaaaaaaaaaaa
doaaaaabbfaaaaabdoaaaaabejfdeheoiaaaaaaaaeaaaaaaaiaaaaaagiaaaaaa
aaaaaaaaabaaaaaaadaaaaaaaaaaaaaaapaaaaaaheaaaaaaaaaaaaaaaaaaaaaa
adaaaaaaabaaaaaaadadaaaaheaaaaaaabaaaaaaaaaaaaaaadaaaaaaabaaaaaa
amaaaaaaheaaaaaaacaaaaaaaaaaaaaaadaaaaaaacaaaaaaapadaaaafdfgfpfa
gphdgjhegjgpgoaafeeffiedepepfceeaaklklklepfdeheocmaaaaaaabaaaaaa
aiaaaaaacaaaaaaaaaaaaaaaaaaaaaaaadaaaaaaaaaaaaaaapaaaaaafdfgfpfe
gbhcghgfheaaklkl"
}

SubProgram "gles3 " {
Keywords { }
"!!GLES3"
}

}

#LINE 74

		}
	}
	Fallback off
}
